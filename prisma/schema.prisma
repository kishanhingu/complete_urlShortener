// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model url_shortener {
  id        Int      @id @default(autoincrement())
  url       String
  shortCode String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  userId    Int      @map("user_id") // Foreign key field
  user      users    @relation(fields: [userId], references: [id]) // Relation to users table
}

model sessions {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id") // Foreign key field
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  valid     Boolean  @default(true)
  userAgent String   @map("user_agent")
  ip        String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model is_email_valid {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @db.Char(8)
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
}

model users {
  id             Int              @id @default(autoincrement())
  name           String?
  email          String           @unique
  password       String
  isEmailValid   Boolean          @default(false) @map("is_email_valid")
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  url_shortener  url_shortener[]
  sessions       sessions[]
  is_email_valid is_email_valid[]
}
